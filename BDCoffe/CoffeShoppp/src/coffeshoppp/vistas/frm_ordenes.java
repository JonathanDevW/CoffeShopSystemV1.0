/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package coffeshoppp.vistas;

import coffeshoppp.modelo.Conexion;
import coffeshoppp.modelo.Sesion;
import java.awt.event.ActionEvent;
import java.beans.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Jonathan's PC
 */
public class frm_ordenes extends javax.swing.JFrame {

    /**
     * Creates new form frm_ordenes
     */
    public frm_ordenes() {
        initComponents();
        
        llenacomboboxCategorias();
        actualizarTablaProductos((String) combobox_categorias.getSelectedItem()); 
        tecladoTactil();
        
        String[] opciones = {"Para llevar", "Local"};

        combobox_consumo.setModel(new DefaultComboBoxModel(opciones));
        txt_subtotal.setEditable(false);
        txt_subtotal.setFocusable(false);
        txt_total.setEditable(false);
        txt_total.setFocusable(false);
        
        
        
    }
    
    
    private Conexion conexion;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        txt_cliente = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_oden = new javax.swing.JTable();
        btn_realizar_orden = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_subtotal = new javax.swing.JTextField();
        btn_eliminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_mesa = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btn_agregar_producto = new javax.swing.JButton();
        txt_cantidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        combobox_categorias = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_productos_ordenes = new javax.swing.JTable();
        combobox_consumo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        btn_actualizar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btn_1 = new javax.swing.JButton();
        btn_2 = new javax.swing.JButton();
        btn_3 = new javax.swing.JButton();
        btn_0 = new javax.swing.JButton();
        btn_4 = new javax.swing.JButton();
        btn_5 = new javax.swing.JButton();
        btn_6 = new javax.swing.JButton();
        btn_7 = new javax.swing.JButton();
        btn_8 = new javax.swing.JButton();
        btn_9 = new javax.swing.JButton();
        btn_borrar_numero = new javax.swing.JButton();
        btn_regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ordenes");
        setLocation(new java.awt.Point(0, 0));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Orden", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel5.setText("Total:");

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel6.setText("Cliente:");

        txt_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_clienteActionPerformed(evt);
            }
        });

        tabla_oden.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        tabla_oden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto", "Cantidad", "Precio", "Consumo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla_oden);

        btn_realizar_orden.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_realizar_orden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/_PNG 64/basic_sheet_pencil.png"))); // NOI18N
        btn_realizar_orden.setText("Realizar orden");
        btn_realizar_orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_realizar_ordenActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel1.setText("Subtotal");

        txt_subtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_subtotalActionPerformed(evt);
            }
        });

        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/_PNG 64/basic_trashcan.png"))); // NOI18N
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel2.setText("Mesa:");

        jButton2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/_PNG 64/basic_trashcan_remove.png"))); // NOI18N
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_realizar_orden)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(txt_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_mesa, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_eliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(txt_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txt_subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_total, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(txt_mesa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_realizar_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Realiza tu orden", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel8.setText("Cantidad*");

        btn_agregar_producto.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_agregar_producto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/_PNG64/arrows_circle_plus.png"))); // NOI18N
        btn_agregar_producto.setText("Agregar");
        btn_agregar_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_productoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel7.setText("Categoria:");

        combobox_categorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabla_productos_ordenes.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        tabla_productos_ordenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Producto", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_productos_ordenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_productos_ordenesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_productos_ordenes);

        combobox_consumo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel10.setText("Consumo:");

        btn_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/_PNG64/arrows_rotate.png"))); // NOI18N
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        btn_1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_1.setText("1");

        btn_2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_2.setText("2");

        btn_3.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_3.setText("3");

        btn_0.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_0.setText("0");

        btn_4.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_4.setText("4");

        btn_5.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_5.setText("5");

        btn_6.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_6.setText("6");

        btn_7.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_7.setText("7");

        btn_8.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_8.setText("8");
        btn_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_8ActionPerformed(evt);
            }
        });

        btn_9.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        btn_9.setText("9");

        btn_borrar_numero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/_PNG64/arrows_keyboard_delete.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_8, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_borrar_numero)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_1, btn_2, btn_3, btn_4, btn_5, btn_6, btn_7, btn_8, btn_9});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_7, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(btn_8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_4, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_borrar_numero))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_0, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_0, btn_1, btn_2, btn_3, btn_4, btn_5, btn_6, btn_7, btn_8, btn_9});

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(combobox_categorias, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_actualizar))))
                    .addComponent(btn_agregar_producto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combobox_consumo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(combobox_consumo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combobox_categorias, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_actualizar))
                        .addGap(22, 22, 22)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_agregar_producto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        btn_regresar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/_PNG64/arrows_square_left.png"))); // NOI18N
        btn_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_subtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_subtotalActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt_subtotalActionPerformed

    private void txt_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_clienteActionPerformed

    private void tabla_productos_ordenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_productos_ordenesMouseClicked
        // TODO add your handling code here:
    
    }//GEN-LAST:event_tabla_productos_ordenesMouseClicked

    private void btn_agregar_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_productoActionPerformed

        AgregarDetalle();
        actualizarTotal();
        actualizarSubTotal();
        txt_cantidad.setText("");
        
    }//GEN-LAST:event_btn_agregar_productoActionPerformed

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        // TODO add your handling code here:
        actualizarTablaProductos((String) combobox_categorias.getSelectedItem()); 

    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_8ActionPerformed

    private void btn_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regresarActionPerformed
        // TODO add your handling code here:
        frm_inicio frm_inicio = new frm_inicio();
        frm_inicio.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btn_regresarActionPerformed



    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        DefaultTableModel model = (DefaultTableModel) tabla_oden.getModel();
        int selectedRowIndex = tabla_oden.getSelectedRow();

        // Verifica si hay una fila seleccionada
        if (selectedRowIndex == -1) {
            // Si no hay una fila seleccionada, muestra un mensaje
            JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Preguntando al usuario si  quiere eliminar el producto
        int option = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea eliminar el producto?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            // Si el usuario elige 'Sí', elimina la fila
            model.removeRow(selectedRowIndex);
            
            // Actualizando el total después de restar el valor del producto eliminado
            actualizarTotal();
            actualizarSubTotal();
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    // Pregunta al usuario si realmente quiere cancelar la orden
        int option = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea cancelar la orden?", "Confirmar cancelación", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            // Si el usuario elige 'Sí', limpia la orden
            limpiarCampos();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btn_realizar_ordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_realizar_ordenActionPerformed
        try {
            // TODO add your handling code here:

            insertarOrden();
            
        } catch (SQLException ex) {
            Logger.getLogger(frm_ordenes.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error al insertar la orden" + ex);
        }
    }//GEN-LAST:event_btn_realizar_ordenActionPerformed

    /**
     * @param args the command line arguments
     */
    


    private void AgregarDetalle() {
        int cantidad;
        int filaSeleccionada = tabla_productos_ordenes.getSelectedRow();
        if (filaSeleccionada != -1) {
            try {
                cantidad = Integer.parseInt(txt_cantidad.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "La cantidad debe ser un número entero válido");
                return;
            }
            
            int codigo = (int) tabla_productos_ordenes.getValueAt(filaSeleccionada, 0);
            String consumo = combobox_consumo.getSelectedItem().toString();
            String nombreProducto = (String) tabla_productos_ordenes.getValueAt(filaSeleccionada, 1);
            double precio = (double) tabla_productos_ordenes.getValueAt(filaSeleccionada, 2);

            if (cantidad > 0) {
                Object[] rowData = {codigo, nombreProducto, cantidad, precio, consumo};

                DefaultTableModel model = (DefaultTableModel) tabla_oden.getModel();
                model.addRow(rowData);
            } else {
                JOptionPane.showMessageDialog(null, "La cantidad debe ser mayor o igual a cero");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto");
        }
    }
    
    public void llenacomboboxCategorias() {
        Conexion conexion = null;

        try {
            // Creando y conectando la instancia de la conexión
            conexion = new Conexion();
            conexion.conectar();

            // Consulta SQL para obtener nombres de categorías
            String query = "SELECT nombre_categoria FROM categoria";

            try (ResultSet resultSet = conexion.getStatement().executeQuery(query)) {
                // Llenaando el combo box con las categorías
                DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
                model.addElement(""); // Opción en blanco

                while (resultSet.next()) {
                    model.addElement(resultSet.getString("nombre_categoria"));
                }

                combobox_categorias.setModel(model);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar las categorías: " + e.getMessage());
        } finally {
            // Desconectar la base de datos 
            if (conexion != null) {
                conexion.desconectar();
            }
        }
    }

/**
 * Method to update the table of products based on the selected category.
 * @param categoriaSelected The selected category.
 */


    private void actualizarTablaProductos(String categoriaSeleccionada) {
        Conexion conexion = null;

        try {
            // Creando y conectando la instancia de la conexión
            conexion = new Conexion();
            conexion.conectar();

            String query = "SELECT p.id_producto, c.nombre_categoria, p.nombre_producto, p.descripcion, p.precio FROM producto p JOIN categoria c ON p.id_categoria = c.id_categoria";

            if (!categoriaSeleccionada.isEmpty()) {
                query += " WHERE c.nombre_categoria = ?";
            }

            try (PreparedStatement preparedStatement = conexion.getConnection().prepareStatement(query)) {
                if (!categoriaSeleccionada.isEmpty()) {
                    preparedStatement.setString(1, categoriaSeleccionada);
                }

                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    // Llenando la tabla de productos
                    DefaultTableModel model = (DefaultTableModel) tabla_productos_ordenes.getModel();
                    model.setRowCount(0);

                    while (resultSet.next()) {
                        Object[] row = {
                            resultSet.getInt("id_producto"),
                            resultSet.getString("nombre_producto"),
                            resultSet.getDouble("precio"),
                        };
                        model.addRow(row);
                    }
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar la tabla de productos: " + e.getMessage());
        } finally {
            // Desconectar la base de datos 
            if (conexion != null) {
                conexion.desconectar();
            }
        }
    }
    
    private final DecimalFormat formatoDosDecimales = new DecimalFormat("#.##");

    private double subTotal() {
        double subtotal = 0;

        for (int i = 0; i < tabla_oden.getRowCount(); i++) {
            // Obteniendo la cantidad y el precio
            Number cantidadObj = (Number) tabla_oden.getValueAt(i, 2);
            double precio = Double.parseDouble(tabla_oden.getValueAt(i, 3).toString());

            // Multiplicando cantidad por precio para obtener el subtotal de la fila
            int cantidad = cantidadObj.intValue();
            double subtotalFila = cantidad * precio;

            subtotal += subtotalFila;
        }

        return subtotal;
    }

    private void actualizarSubTotal() {
        double subtotal = subTotal();
        txt_subtotal.setText(formatoDosDecimales.format(subtotal));
    }

    private void actualizarTotal() {
        double total = calcularTotalConIVA();
        txt_total.setText(formatoDosDecimales.format(total));
    }

    private double calcularTotalConIVA() {
        double total = subTotal();

        // Aplicar IVA al total
        total *= 1.13;

        return total;
    }
    private void tecladoTactil(){
        btn_0.addActionListener((ActionEvent e) -> {
        String numero = btn_0.getText();
        txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_1.addActionListener((ActionEvent e) -> {
            String numero = btn_1.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_2.addActionListener((ActionEvent e) -> {
            String numero = btn_2.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_3.addActionListener((ActionEvent e) -> {
            String numero = btn_3.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_4.addActionListener((ActionEvent e) -> {
            String numero = btn_4.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_5.addActionListener((ActionEvent e) -> {
            String numero = btn_5.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_6.addActionListener((ActionEvent e) -> {
            String numero = btn_6.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_7.addActionListener((ActionEvent e) -> {
            String numero = btn_7.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_8.addActionListener((ActionEvent e) -> {
            String numero = btn_8.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_9.addActionListener((ActionEvent e) -> {
            String numero = btn_9.getText();
            txt_cantidad.setText(txt_cantidad.getText() + numero);
        });

        btn_borrar_numero.addActionListener((ActionEvent e) -> {
            btn_borrar_numeroActionPerformed(e);
        });

    }

    private void btn_borrar_numeroActionPerformed(ActionEvent e) {
        String currentText = txt_cantidad.getText();
        if (currentText.length() > 0) {
            txt_cantidad.setText(currentText.substring(0, currentText.length() - 1));
        }
    }
    
    private void insertarOrden() throws SQLException {
        conexion = new Conexion();
        conexion.conectar();
        
        int id_usuario = obtenerIdUsuarioPorNombre();
        String cliente = txt_cliente.getText();
        String mesa = txt_mesa.getText();
        Double total = Double.parseDouble(txt_total.getText());

        String sqlOrden = "INSERT INTO orden (id_usuario, cliente, mesa, total) VALUES (?, ?, ?, ?)";

        try (PreparedStatement preparedStatement = conexion.prepareStatement(sqlOrden)) {
            preparedStatement.setInt(1, id_usuario);
            preparedStatement.setString(2, cliente);
            preparedStatement.setString(3, mesa);
            preparedStatement.setDouble(4, total);

            int affectedRows = preparedStatement.executeUpdate();

            if (affectedRows > 0) {

                int idOrdenGenerado = obtenerUltimoIdInsertado();
                JOptionPane.showMessageDialog(null, idOrdenGenerado);
                ordenDetalle(idOrdenGenerado);
                JOptionPane.showMessageDialog(null, "Orden agregada correctamente.");
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(null, "Error al agregar la orden.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos" + e);
        }
    }

    private int obtenerUltimoIdInsertado() {
        try  {
            Conexion conexion = new Conexion();
            conexion.conectar();
            int ultimoIdIngresado = -1;
            String sql = "SELECT SCOPE_IDENTITY() AS last_id";

            try (PreparedStatement preparedStatement = conexion.prepareStatement(sql);
                 ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    ultimoIdIngresado = resultSet.getInt("last_id");
                }
            }

            return ultimoIdIngresado;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al obtener el último ID insertado: " + e.getMessage());
            return -1;
        }
    }
    
    private void ordenDetalle(int idOrden) {
        String sqlOrdenDetalle = "INSERT INTO orden_detalle (id_orden, id_producto, cantidad, precio_unitario, consumo, subtotal) VALUES (?, ?, ?, ?, ?, ?)";

        DefaultTableModel modeloOrden = (DefaultTableModel) tabla_oden.getModel();

        conexion = new Conexion();
        conexion.conectar();

        try (PreparedStatement preparedStatement = conexion.prepareStatement(sqlOrdenDetalle)) {
            int rowCount = modeloOrden.getRowCount();

            for (int i = 0; i < rowCount; i++) {
                preparedStatement.setInt(1, idOrden);
                preparedStatement.setInt(2, (int) modeloOrden.getValueAt(i, 0));
                preparedStatement.setInt(3, (int) modeloOrden.getValueAt(i, 2));  // Adjust index based on your table structure
                preparedStatement.setDouble(4, (double) modeloOrden.getValueAt(i, 3));  // Adjust index based on your table structure

                preparedStatement.setString(5, (String) modeloOrden.getValueAt(i, 4));

                // Move the subtotal calculation inside the loop
                double cantidad = (int) modeloOrden.getValueAt(i, 2);
                double PrecioPorProducto = (double) modeloOrden.getValueAt(i, 3);
                double subtotal = cantidad * PrecioPorProducto;

                preparedStatement.setDouble(6, subtotal);

                int affectedRows = preparedStatement.executeUpdate();
                if (affectedRows > 0) {
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al agregar el producto.");
                }
            }
        } catch (SQLException e){
            JOptionPane.showMessageDialog(null, "Error al conectar a la base de datos" + e);
        }
    }

    
    private void limpiarCampos() {
    txt_cantidad.setText("");
    txt_cliente.setText("");
    txt_mesa.setText("");
    txt_subtotal.setText("");
    txt_total.setText("");
    // Limpia la tabla
    DefaultTableModel model = (DefaultTableModel) tabla_oden.getModel();
    model.setRowCount(0);
    }
    

    
    public int obtenerIdUsuarioPorNombre() {
        
        String nombreUsuario = Sesion.getNombreUsuario();
        Conexion conexion = new Conexion();
        
        int idUsuario = -1;

        try {
            conexion.conectar();

            String sql = "SELECT id_usuario FROM usuario WHERE login = ?";
            try (PreparedStatement pstmt = conexion.getConnection().prepareStatement(sql)) {
                pstmt.setString(1, nombreUsuario);

                try (ResultSet resultSet = pstmt.executeQuery()) {
                    if (resultSet.next()) {
                        idUsuario = resultSet.getInt("id_usuario");
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al obtener el ID de usuario: " + e.getMessage());
        } finally {
            if (conexion != null) {
                conexion.desconectar();
            }
        }

        return idUsuario;
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_ordenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_ordenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_ordenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_ordenes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new frm_ordenes().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_0;
    private javax.swing.JButton btn_1;
    private javax.swing.JButton btn_2;
    private javax.swing.JButton btn_3;
    private javax.swing.JButton btn_4;
    private javax.swing.JButton btn_5;
    private javax.swing.JButton btn_6;
    private javax.swing.JButton btn_7;
    private javax.swing.JButton btn_8;
    private javax.swing.JButton btn_9;
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_agregar_producto;
    private javax.swing.JButton btn_borrar_numero;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_realizar_orden;
    private javax.swing.JButton btn_regresar;
    private javax.swing.JComboBox<String> combobox_categorias;
    private javax.swing.JComboBox<String> combobox_consumo;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_oden;
    private javax.swing.JTable tabla_productos_ordenes;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_cliente;
    private javax.swing.JTextField txt_mesa;
    private javax.swing.JTextField txt_subtotal;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables
}
